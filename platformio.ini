[common]
monitor_filters = esp32_exception_decoder, colorize, time, printable, debug
build_flags = 
   '-DFIXED_POINT=1'
   '-DOUTSIDE_SPEEX=1'
   '-DWIFI_SSID="WIFI_SSID"'                 ; Change to your wifi ssid
   '-DWIFI_PASS="WIFI_PASS"'                 ; Change to your wifi password
   '-DHOSTNAME="HOST_IP"'                    ; Should match below upload_port
   '-DOTA_PORT=3232'                         ; Should match below upload_port
   '-DPID="matrixvoice"'                     ; PID is part of the MQTT topic
   '-DOTA_PASS_HASH="PASS_HASH"'             ; Hashed with MD5 https://www.md5hashgenerator.com/
   '-DMQTT_IP=IPAddress(192, 168, 0, 1)'     ; Change to the IP of your MQTT broker
   '-DMQTT_HOST="BROKER_IP"'                 ; Change to the IP of your MQTT broker
   '-DMQTT_PORT=BROKER_PORT'                 ; Change to the port of your MQTT broker
   '-DMQTT_USER="MQTT_USER"'                 ; Change to your MQTT username
   '-DMQTT_PASS="MQTT_PASS"'                 ; Change to your MQTT password
   '-DMQTT_MAX_PACKET_SIZE=2000'             ; Increase it, if audiopackets are not be sent
   '-DCORE_DEBUG_LEVEL=5'
   '-lnn_model_alexa_wn3'
   '-Llib/esp_sr'
   '-lwakenet'
   '-ldl_lib'
   '-lc_speech_features'

[env:esp32dev]
monitor_speed = 115200
platform = espressif32@1.9.0
upload_protocol = espota
board = esp32dev
framework = arduino
board_build.partitions  = ./ota/partitions_two_ota.csv
; MatrixVoice ESP32 LAN name or IP, should match HOSTNAME in build_flags
upload_port = '192.168.0.1'
build_flags = ${common.build_flags}

; MatrixVoice OTA password (auth), should match hashed password (OTA_PASS_HASH) in build_flags
upload_flags =
    --port=3232
    --auth=UNHASHED_PASS
    --f=.pio/build/esp32dev/firmware.bin

lib_deps =
   https://github.com/matrix-io/matrixio_hal_esp32.git
   https://github.com/matrix-io/esp32-arduino-ota.git
   https://github.com/knolleary/pubsubclient.git
   https://github.com/bblanchon/ArduinoJson.git
   https://github.com/marvinroger/async-mqtt-client.git
   https://github.com/me-no-dev/AsyncTCP.git
